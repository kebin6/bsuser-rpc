syntax = "proto3";

package bsuser;
option go_package="./bsuser";

// base message
message Empty {}

message IDReq {
  uint64 id = 1;
}

message IDsReq {
  repeated uint64 ids = 1;
}

message UUIDsReq {
  repeated string ids = 1;
}

message UUIDReq {
  string id = 1;
}

message MobileReq {
  string mobile = 1;
}

message BaseResp {
  string msg = 1;
}

message PageInfoReq {
  uint64 page = 1;
  uint64 page_size = 2;
}

message BaseIDResp {
  uint64 id = 1;
  string msg = 2;
}

message BaseUUIDResp {
  string id = 1;
  string msg = 2;
}

message BsUserInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  optional uint32 status = 4;
  optional string name = 5;
  optional string pwd = 6;
  optional string mobile = 7;
  optional string invite_code = 8;
  optional double total_amount = 9;
  optional double valid_amount = 10;
  optional uint64 invited_by = 11;
}

message BsUserListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string name = 3;
  optional string mobile = 4;
  optional uint32 status = 5;
}

message BsUserListResp {
  uint64 total = 1;
  repeated BsUserInfo data = 2;
}

service Bsuser {
  // group: base
  rpc initDatabase (Empty) returns (BaseResp);
  // group: base
  rpc create(BsUserInfo) returns (BaseIDResp);
  // group: base
  rpc update(BsUserInfo) returns (BaseIDResp);
  // group: base
  rpc getById(IDReq) returns (BsUserInfo);
  // group: base
  rpc getByMobile(MobileReq) returns (BsUserInfo);
  // group: base
  rpc getOne(BsUserInfo) returns (BsUserInfo);
  // group: base
  rpc getList(BsUserListReq) returns (BsUserListResp);
}
